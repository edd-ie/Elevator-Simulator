.include "macros.asm"
.include "keyboard.asm"

.text
.globl main


main: 
	printStr(hello)
	printStr(newLine)
	
	# avoid using t0-t3
	addi $t4, $0, 100
	printNum($t4)
	
	push $t4
	pop $t5
	printNum($t5)
	
	peek $t4
	printNum($t4)
	
	
	li $t0, 0                                                                      #initialize character to zero
	jal GetCharacter                                                               #wait for user to enter in character

	move $t0, $v0                                                                 #store character in $t0

	li $v0, 11                                                                      #syscall for print character
	move $a0, $t0                                                                 #pass in $t0 as argument $a0
	syscall #print character
	
	li $t1, esc
	bne $t0, $t1, main

	li $v0, 10                                                                      #syscall for exit program
	syscall #exit program

endMain:
exit

.data
hello: .asciiz "Program running..."
newLine: .asciiz "\n"
queue: .word 0		# stores floor (1-5 up, 6-9 down)
.space 36 			# queue = array of size 9
sizeQueue: .byte 0 	# current quesize 
ptrQueue: .word 0	# first element
floor: .byte 		# current floor
